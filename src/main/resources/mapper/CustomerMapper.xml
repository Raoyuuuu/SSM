<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fjut.crud.dao.CustomerMapper">
  <resultMap id="BaseResultMap" type="com.fjut.crud.bean.Customer">
    <id column="cust_id" jdbcType="BIGINT" property="custId" />
    <result column="cust_name" jdbcType="VARCHAR" property="custName" />
    <result column="cust_source" jdbcType="VARCHAR" property="custSource" />
    <result column="cust_industry" jdbcType="VARCHAR" property="custIndustry" />
    <result column="cust_level" jdbcType="VARCHAR" property="custLevel" />
    <result column="cust_mobile" jdbcType="VARCHAR" property="custMobile" />
    <result column="cust_email" jdbcType="VARCHAR" property="custEmail" />
  </resultMap>
  <!--自定义级联查询-->
  <resultMap id="WithDaseResultMap" type="com.fjut.crud.bean.Customer">
    <id column="cust_id" jdbcType="BIGINT" property="custId" />
    <result column="cust_name" jdbcType="VARCHAR" property="custName" />
    <result column="cust_source" jdbcType="VARCHAR" property="custSource" />
    <result column="cust_industry" jdbcType="VARCHAR" property="custIndustry" />
    <result column="cust_level" jdbcType="VARCHAR" property="custLevel" />
    <result column="cust_mobile" jdbcType="VARCHAR" property="custMobile" />
    <result column="cust_email" jdbcType="VARCHAR" property="custEmail" />

    <association property="baseDictSource" javaType="com.fjut.crud.bean.BaseDict">
    <id column="cust_source" property="dictId" />
    <result column="cust_source_name" property="dictItemName" />
    </association>
    <association property="baseDictIndustry" javaType="com.fjut.crud.bean.BaseDict">
      <id column="cust_industry" property="dictId" />
      <result column="cust_industry_name" property="dictItemName" />
    </association>
    <association property="baseDictLevel" javaType="com.fjut.crud.bean.BaseDict">
      <id column="cust_level" property="dictId" />
      <result column="cust_level_name" property="dictItemName" />
    </association>
  </resultMap>

  <!--分页查询 条件查询-->
  <select id="findAll"  resultType="map">
    SELECT
    c.`cust_id`,
    c.`cust_name`,
    c.`cust_mobile`,
    c.`cust_email`,
    s.`dict_id` `cust_source`,
    s.`dict_item_name` `cust_source_name`,
    i.`dict_id` `cust_industry`,
    i.`dict_item_name` `cust_industry_name`,
    l.`dict_id` `cust_level`,
    l.`dict_item_name` `cust_level_name`
    FROM
    cst_customer c
    LEFT JOIN base_dict s ON c.`cust_source`= s.`dict_id`
    LEFT JOIN base_dict i ON c.`cust_industry`= i.`dict_id`
    LEFT JOIN base_dict l ON c.`cust_level`= l.`dict_id`

  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cust_id, cust_name, cust_source, cust_industry, cust_level, cust_mobile, cust_email
  </sql>
  <sql id="WithDase_Column_List">
    SELECT
	c.`cust_id`,
	c.`cust_name`,
	c.`cust_mobile`,
	c.`cust_email`,
	s.`dict_id` `cust_source`,
	s.`dict_item_name` `cust_source_name`,
	i.`dict_id` `cust_industry`,
	i.`dict_item_name` `cust_industry_name`,
	l.`dict_id` `cust_level`,
	l.`dict_item_name` `cust_level_name`


  </sql>

  <select id="selectByExampleWithDase" parameterType="com.fjut.crud.bean.CustomerExample" resultMap="WithDaseResultMap">
    SELECT
    c.`cust_id`,
    c.`cust_name`,
    c.`cust_mobile`,
    c.`cust_email`,
    s.`dict_id` `cust_source`,
    s.`dict_item_name` `cust_source_name`,
    i.`dict_id` `cust_industry`,
    i.`dict_item_name` `cust_industry_name`,
    l.`dict_id` `cust_level`,
    l.`dict_item_name` `cust_level_name`
    FROM
    cst_customer c
    LEFT JOIN base_dict s ON c.`cust_source`= s.`dict_id`
    LEFT JOIN base_dict i ON c.`cust_industry`= i.`dict_id`
    LEFT JOIN base_dict l ON c.`cust_level`= l.`dict_id`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKeyWithDase" parameterType="java.lang.Long" resultMap="WithDaseResultMap">
    select
    <include refid="WithDase_Column_List" />
    FROM
    cst_customer c
    LEFT JOIN base_dict s ON c.`cust_source`= s.`dict_id`
    LEFT JOIN base_dict i ON c.`cust_industry`= i.`dict_id`
    LEFT JOIN base_dict l ON c.`cust_level`= l.`dict_id`
    where cust_id = #{custId,jdbcType=BIGINT}
  </select>

  <select id="selectByExample" parameterType="com.fjut.crud.bean.CustomerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cst_customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cst_customer
    where cust_id = #{custId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cst_customer
    where cust_id = #{custId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.fjut.crud.bean.CustomerExample">
    delete from cst_customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fjut.crud.bean.Customer">
    insert into cst_customer (cust_id, cust_name, cust_source, 
      cust_industry, cust_level, cust_mobile, 
      cust_email)
    values (#{custId,jdbcType=BIGINT}, #{custName,jdbcType=VARCHAR}, #{custSource,jdbcType=VARCHAR}, 
      #{custIndustry,jdbcType=VARCHAR}, #{custLevel,jdbcType=VARCHAR}, #{custMobile,jdbcType=VARCHAR}, 
      #{custEmail,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fjut.crud.bean.Customer">
    insert into cst_customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="custId != null">
        cust_id,
      </if>
      <if test="custName != null">
        cust_name,
      </if>
      <if test="custSource != null">
        cust_source,
      </if>
      <if test="custIndustry != null">
        cust_industry,
      </if>
      <if test="custLevel != null">
        cust_level,
      </if>
      <if test="custMobile != null">
        cust_mobile,
      </if>
      <if test="custEmail != null">
        cust_email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="custId != null">
        #{custId,jdbcType=BIGINT},
      </if>
      <if test="custName != null">
        #{custName,jdbcType=VARCHAR},
      </if>
      <if test="custSource != null">
        #{custSource,jdbcType=VARCHAR},
      </if>
      <if test="custIndustry != null">
        #{custIndustry,jdbcType=VARCHAR},
      </if>
      <if test="custLevel != null">
        #{custLevel,jdbcType=VARCHAR},
      </if>
      <if test="custMobile != null">
        #{custMobile,jdbcType=VARCHAR},
      </if>
      <if test="custEmail != null">
        #{custEmail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fjut.crud.bean.CustomerExample" resultType="java.lang.Long">
    select count(*) from cst_customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cst_customer
    <set>
      <if test="record.custId != null">
        cust_id = #{record.custId,jdbcType=BIGINT},
      </if>
      <if test="record.custName != null">
        cust_name = #{record.custName,jdbcType=VARCHAR},
      </if>
      <if test="record.custSource != null">
        cust_source = #{record.custSource,jdbcType=VARCHAR},
      </if>
      <if test="record.custIndustry != null">
        cust_industry = #{record.custIndustry,jdbcType=VARCHAR},
      </if>
      <if test="record.custLevel != null">
        cust_level = #{record.custLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.custMobile != null">
        cust_mobile = #{record.custMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.custEmail != null">
        cust_email = #{record.custEmail,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cst_customer
    set cust_id = #{record.custId,jdbcType=BIGINT},
      cust_name = #{record.custName,jdbcType=VARCHAR},
      cust_source = #{record.custSource,jdbcType=VARCHAR},
      cust_industry = #{record.custIndustry,jdbcType=VARCHAR},
      cust_level = #{record.custLevel,jdbcType=VARCHAR},
      cust_mobile = #{record.custMobile,jdbcType=VARCHAR},
      cust_email = #{record.custEmail,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fjut.crud.bean.Customer">
    update cst_customer
    <set>
      <if test="custName != null">
        cust_name = #{custName,jdbcType=VARCHAR},
      </if>
      <if test="custSource != null">
        cust_source = #{custSource,jdbcType=VARCHAR},
      </if>
      <if test="custIndustry != null">
        cust_industry = #{custIndustry,jdbcType=VARCHAR},
      </if>
      <if test="custLevel != null">
        cust_level = #{custLevel,jdbcType=VARCHAR},
      </if>
      <if test="custMobile != null">
        cust_mobile = #{custMobile,jdbcType=VARCHAR},
      </if>
      <if test="custEmail != null">
        cust_email = #{custEmail,jdbcType=VARCHAR},
      </if>
    </set>
    where cust_id = #{custId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fjut.crud.bean.Customer">
    update cst_customer
    set cust_name = #{custName,jdbcType=VARCHAR},
      cust_source = #{custSource,jdbcType=VARCHAR},
      cust_industry = #{custIndustry,jdbcType=VARCHAR},
      cust_level = #{custLevel,jdbcType=VARCHAR},
      cust_mobile = #{custMobile,jdbcType=VARCHAR},
      cust_email = #{custEmail,jdbcType=VARCHAR}
    where cust_id = #{custId,jdbcType=BIGINT}
  </update>
</mapper>